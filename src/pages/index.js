import { useState, useEffect} from 'react';
import * as toxicity from '@tensorflow-models/toxicity';

import Head from 'next/head'
import Image from "next/image";

// Styles
import styles from "@/styles/index.module.css"

// Assets
import sganyani from '../../public/sganyani.png'

// Icons
import { BiSearch, BiMessageSquareAdd } from 'react-icons/bi'
import { BsBookmark } from 'react-icons/bs'
// import { PiSubtitles } from 'react-icons/pi'

  // Components
import Thread from '@/components/thread/index'
import Backdrop from "@/hoc/backdrop/backdrop"

// Data
import { threads } from '@/data'

// Assets:Icons
// import { FaArrowLeftLong, FaTimeline } from 'react-icons/fa';
import { BsVectorPen } from 'react-icons/bs';
// import { MdKeyboardArrowLeft, MdViewTimeline } from 'react-icons/md';
// import { LuSubtitles} from 'react-icons/lu'

export default function Home() {
  const [reply, setReply] = useState(false)
  const [searchValue, setSearchValue] = useState("")
  const [selectedFilter, setSelectedFilter] = useState("description")

  const FILTERS = [
    {
      name : "Description",
      icon: ""
    }, 
    { 
      name : "Topic",
      icon: ""
    }, 
    { 
      name : "Session | Year | Paper",
      icon: ""
    }
  ]

  const REGISTERED_COURSES = [
    {
      name : "Principles of Computer Science",
      code: "CSC201",
      image: "biology"
    },
    {
      name : "Introduction to Biology",
      code: "BIO101",
      image: "biology"
    }
]

  return (
    <>
      <Head>
        <title>Smart-Forums</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Backdrop reply={reply} setReply={setReply} />
      <main>
        <section className={styles.nav}>
            <div className={styles.title}>
                <p> Discussion Forums / Chemistry </p>
                <div className={styles.backArrow}>
                    {/* <MdKeyboardArrowLeft className={styles.icon} color="#0058FF" /> */}
                    <p>dashboard</p>
                </div>
            </div>

            <div className={styles.profile}>
                <Image className={styles.avatar} src={sganyani} alt="user-avatar" />
                {/* <BiDotsVerticalRounded className={styles.icon} /> */}
            </div>
        </section>
        {/* // Mid Section */}
        <section className={styles.midSection}>
          <section className={styles.sideBar}>
              <div className={styles.wrap}>
                  <div className={styles.head}>
                      <i className="fa-regular fa-bars"></i>
                      <p>Registered Courses</p>
                  </div>
                  <div className={styles.registeredCourses}>
                      {
                          REGISTERED_COURSES.map((course, index) => {
                              return (
                                  <div className={styles.course} key={index}>
                                      <Image className={styles.avatar} src={`/${course.image}.jpg`} width={50} height={50} alt="course cover photo" />
                                      <div className={styles.courseMeta}>
                                          <p className={styles.courseName}>
                                              { course.name }
                                          </p>
                                          <p className={styles.courseCode}>
                                              { course.code }
                                          </p>
                                      </div>
                                  </div>
                              )
                          })
                      }
                  </div>
              </div>
              {/* Filters */}
              <div className={styles.filters}>
                  <div className={styles.head}>
                      {/* <i className="fa-solid fa-magnifying-glass"></i> */}
                      <p>Filters</p>
                  </div>
                  <section className={styles.filtersList}>
                       <div
                         className={styles.radioContainer} 
                         onClick={()=>setSelectedFilter("description")}
                         style={{ backgroundColor: selectedFilter === "description"?"transparent":"#e0e0e0", border: selectedFilter === "description"?"1px solid #e0e0e0":"none" }}>
                          <BsVectorPen className={styles.icon} />
                          <p>Description</p>
                        </div>

                        <div 
                          className={styles.radioContainer} 
                          onClick={()=>setSelectedFilter("topic")}
                          style={{ backgroundColor: selectedFilter === "topic"?"transparent":"#e0e0e0", border: selectedFilter === "topic"?"1px solid #e0e0e0":"none" }}>
                          {/* <LuSubtitles className={styles.icon} /> */}
                          <p>Topic</p>
                        </div>

                        <div 
                          className={styles.radioContainer} 
                          onClick={()=>setSelectedFilter("timeline")}
                          style={{ backgroundColor: selectedFilter === "timeline"?"transparent":"#e0e0e0", border: selectedFilter === "timeline"?"1px solid #e0e0e0":"none" }}>
                          {/* <MdViewTimeline className={styles.icon} /> */}
                          <p>Session | Year | Paper</p>
                        </div>
                  </section>
              </div>
          </section>
          <section className={styles.content}>
              {/* Controls */}
              <div className={styles.controls}>
                  <p className={styles.placeholderDescription}></p> 
                  <div className={styles.frSearch}>
                      {/* Filter threads */}
                      <button type="submit" className={styles.searchIcon}>
                        <BiSearch color="#808080" />
                      </button>
                      <input 
                            className={styles.input} 
                            onChange={(event)=>setSearchValue(event.target.value)} 
                            type='text' 
                            placeholder='search...' 
                            value={searchValue} />  
                  </div>
                  {/* Filter saved posts */}
                  <div className={styles.controlsBtn}>
                    <BsBookmark color='#808080' />
                  </div>
                  {/* Add new post */}
                  <div className={styles.controlsBtn} onClick={()=>setReply(true)}>
                    <BiMessageSquareAdd color='#808080' />
                  </div>

                  <div className={styles.filter}>
                      {selectedFilter}                  
                  </div>
              </div>
              <div className={styles.threads}>
                {
                    threads.filter((thread) => {
                      if(selectedFilter.toLowerCase() === "description"){
                        return searchValue === ''?thread:thread.mainQuestion.question.description.toLowerCase().includes(searchValue.toLowerCase())
                      }else if(selectedFilter.toLowerCase() === "topic"){
                        return searchValue === ''?thread:thread.mainQuestion.references.topic.toLowerCase().includes(searchValue.toLowerCase())
                      }else if(selectedFilter.toLowerCase() === "timeline"){
                        const { year, session, paper, syllabus, topic } = thread.mainQuestion.references
                        const timeline = `${session} ${year} ${paper} `
                        return searchValue === ''?thread:searchValue.trim() === timeline.trim()
                      }
                    }).map((thread, index) => {
                        return <Thread key={index}  thread={thread}  setReply={setReply}/>
                       })
                  
                }
              </div>
          </section>
        </section>
      </main>
    </>
  )
}
